/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        td_shift_caps: td_shift_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "td_shift_caps";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_SHIFT>, <&caps_word>;
        };

        better_cap_word: better_cap_word {
            compatible = "zmk,behavior-caps-word";
            label = "BETTER_CAP_WORD";
            #binding-cells = <0>;
            continue-list = <A B C D E F G H I J K L M N O P Q R S T U V W X Y Z KP_MINUS MINUS BACKSPACE DELETE LEFT_ARROW RIGHT_ARROW UP_ARROW DOWN_ARROW C_VOLUME_UP C_VOLUME_DOWN C_MUTE C_PREVIOUS C_NEXT C_PLAY_PAUSE>;
            mods = <(MOD_LSFT)>;
        };

        sticky_mod: sticky_mod {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_MOD";
            bindings = <&kp>;
            #binding-cells = <1>;
            quick-release;
            release-after-ms = <1000>;
        };

        stickier_layer: stickier_layer {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKIER_LAYER";
            bindings = <&mo>;
            #binding-cells = <1>;
            release-after-ms = <3000>;
            quick-release;
        };

        out_tg_or_usb: out_tg_or_usb {
            compatible = "zmk,behavior-mod-morph";
            label = "OUT_TG_OR_USB";
            bindings = <&out OUT_TOG>, <&out OUT_USB>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        bt_0_sel_or_unsel: bt_0_sel_or_unsel {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_0_SEL_OR_UNSEL";
            bindings = <&bt BT_SEL 0>, <&shift_clear_bt0>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        bt_1_sel_or_unsel: bt_1_sel_or_unsel {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_1_SEL_OR_UNSEL";
            bindings = <&bt BT_SEL 1>, <&shift_clear_bt1>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        bt_2_sel_or_unsel: bt_2_sel_or_unsel {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_2_SEL_OR_UNSEL";
            bindings = <&bt BT_SEL 2>, <&shift_clear_bt2>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        bt_3_sel_or_unsel: bt_3_sel_or_unsel {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_3_SEL_OR_UNSEL";
            bindings = <&bt BT_SEL 3>, <&shift_clear_bt3>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        bt_4_sel_or_unsel: bt_4_sel_or_unsel {
            compatible = "zmk,behavior-mod-morph";
            label = "BT_4_SEL_OR_UNSEL";
            bindings = <&bt BT_SEL 4>, <&shift_clear_bt4>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        auto_shift_num_row: auto_shift_num_row {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT_NUM_ROW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <500>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <100>;
        };

        home_row_mods_lh: home_row_mods_lh {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS_LH";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 18 43 55 44 7 19 45 57 59 46 58 47 8 9 48 49 35 56 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 37 38 39 36>;
            require-prior-idle-ms = <200>;
        };

        home_row_mods_rh: home_row_mods_rh {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS_RH";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 12 24 13 1 2 14 50 3 4 42 41 40 51 52 54 53 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33 34>;
            require-prior-idle-ms = <200>;
        };

        thumb_cluster_lh: thumb_cluster_lh {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_CLUSTER_LH";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <55 43 56 44 30 18 6 7 19 31 57 45 58 46 32 20 8 9 21 33 47 59 48 34 22 10 11 23 35 49>;
        };

        thumb_cluster_rh: thumb_cluster_rh {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_CLUSTER_RH";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <36 54 0 12 24 37 25 13 1 3 2 14 26 38 50 51 39 27 15 28 16 4 40 52 53 41 29 17 5 42 49 35 23 59 58>;
        };

        thumb_cluster_nav: thumb_cluster_nav {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_CLUSTER_NAV";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <55 43 56 44 30 18 6 7 19 31 57 45 58 46 32 20 8 9 21 33 47 59 48 34 22 10 11 23 35 49 29 28 27 26 25>;
        };

        thumb_cluster_num: thumb_cluster_num {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_CLUSTER_NUM";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <36 54 0 12 24 37 25 13 1 3 2 14 26 38 50 51 39 27 15 28 16 4 40 52 53 41 29 17 5 42 18 18 19 20 21 32 30 31 33 34 22 44 45 46 47 48 49 35 23 59 58>;
        };

        home_row_mods_lh_shift: home_row_mods_lh_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS_LH_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <43 55 44 45 57 59 46 58 47 48 49 56 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 35 36 37 38 39>;
        };

        home_row_mods_rh_shift: home_row_mods_rh_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS_RH_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <12 24 13 1 2 14 50 3 4 42 41 40 51 52 54 53 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33 34>;
        };

        tap_dance_l_shift_capwords: tap_dance_l_shift_capwords {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_L_SHIFT_CAPWORDS";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_SHIFT>,
                <&sticky_mod LEFT_SHIFT>,
                <&better_cap_word>;
        };

        tap_dance_sticky_l_ctrl: tap_dance_sticky_l_ctrl {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_STICKY_L_CTRL";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL>, <&sticky_mod LEFT_CONTROL>;
        };

        tap_dance_sticky_l_alt: tap_dance_sticky_l_alt {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_STICKY_L_ALT";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT>, <&sticky_mod LEFT_ALT>;
        };

        layer_num_switch_tap_dance: layer_num_switch_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_NUM_SWITCH_TAP_DANCE";
            #binding-cells = <0>;
            bindings = <&mo 0>, <&stickier_layer 0>, <&tog 0>;
        };

        layer_nav_switch_tap_dance: layer_nav_switch_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_NAV_SWITCH_TAP_DANCE";
            #binding-cells = <0>;
            bindings = <&mo 0>, <&stickier_layer 0>, <&tog 0>;
        };

        auto_shift_bottom_right: auto_shift_bottom_right {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT_BOTTOM_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <500>;
            require-prior-idle-ms = <150>;
            quick-tap-ms = <100>;
        };

        layer_sel_lh: layer_sel_lh {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_SEL_LH";
            #binding-cells = <0>;
            bindings = <&mo 0>, <&mo 0>, <&mo 0>, <&tog 0>;
        };

        left_thumb_gui: left_thumb_gui {
            compatible = "zmk,behavior-tap-dance";
            label = "LEFT_THUMB_GUI";
            #binding-cells = <0>;
            bindings = <&mo 0>, <&kp LEFT_GUI>;
        };

        num_layer_dot: num_layer_dot {
            compatible = "zmk,behavior-mod-morph";
            label = "NUM_LAYER_DOT";
            bindings = <&kp DOT>, <&kp LEFT_PARENTHESIS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        media_or_config_layer: media_or_config_layer {
            compatible = "zmk,behavior-tap-dance";
            label = "MEDIA_OR_CONFIG_LAYER";
            #binding-cells = <0>;
            bindings = <&mo 0>, <&mo 4>;
        };

        mac_like_backspace: mac_like_backspace {
            compatible = "zmk,behavior-mod-morph";
            label = "MAC_LIKE_BACKSPACE";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        thumb_th: thumb_th {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_TH";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
        };

        numpad_switch: numpad_switch {
            compatible = "zmk,behavior-tap-dance";
            label = "NUMPAD_SWITCH";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMLOCK>, <&none>, <&stickier_layer 4>;
        };

        osl_or_hold_layer: osl_or_hold_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "OSL_OR_HOLD_LAYER";
            bindings = <&mo>, <&stickier_layer>;

            #binding-cells = <2>;
            tapping-term-ms = <275>;
        };

        tap_dance_r_shift: tap_dance_r_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_R_SHIFT";
            #binding-cells = <0>;
            bindings =
                <&kp RIGHT_SHIFT>,
                <&sticky_mod RIGHT_SHIFT>,
                <&better_cap_word>;
        };

        qu_behavior: qu_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "QU_BEHAVIOR";
            bindings = <&kp>, <&qu_macro>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    macros {
        shift_clear_bt0: shift_clear_bt0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 0 &bt BT_CLR>;
            label = "SHIFT_CLEAR_BT0";
        };

        shift_clear_bt1: shift_clear_bt1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 1 &bt BT_CLR>;
            label = "SHIFT_CLEAR_BT1";
        };

        shift_clear_bt2: shift_clear_bt2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 2 &bt BT_CLR>;
            label = "SHIFT_CLEAR_BT2";
        };

        shift_clear_bt3: shift_clear_bt3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 3 &bt BT_CLR>;
            label = "SHIFT_CLEAR_BT3";
        };

        shift_clear_bt4: shift_clear_bt4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&bt BT_SEL 4 &bt BT_CLR>;
            label = "SHIFT_CLEAR_BT4";
        };

        edit_hotkey: edit_hotkey {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&macro_param_2to1 &kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>;

            label = "EDIT_HOTKEY";
        };

        mods_combo_2_keys: mods_combo_2_keys {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER &macro_param_2to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_2to1 &kp MACRO_PLACEHOLDER &macro_param_1to1 &kp MACRO_PLACEHOLDER>;

            label = "MODS_COMBO_2_KEYS";
        };

        qu_macro: qu_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp Q &kp U>;

            label = "QU_MACRO";
            wait-ms = <33>;
            tap-ms = <33>;
        };

        n_t: n_t {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp N &kp SQT &kp T>;

            label = "N_T";
            wait-ms = <33>;
            tap-ms = <33>;
        };

        i_m: i_m {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LS(I) &kp SQT &kp M>;

            label = "I_M";
        };
    };

    combos {
        compatible = "zmk,combos";

        n_t_combo {
            bindings = <&n_t>;
            key-positions = <25 4>;
        };

        layer-1-toggle {
            bindings = <&tog 1>;
            key-positions = <33 36>;
        };

        layer-2-toggle {
            bindings = <&tog 2>;
            key-positions = <37 32>;
        };

        layer-3-toggle {
            bindings = <&tog 3>;
            key-positions = <31 38>;
        };

        i-m {
            bindings = <&i_m>;
            key-positions = <26 7>;
        };

        right_tap_dance_shift {
            bindings = <&better_cap_word>;
            key-positions = <6 7>;
        };

        apostrophe {
            bindings = <&kp SQT>;
            key-positions = <26 27>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            /* QWERTY
 *
 * ,----------------------------------.                      ,----------------------------------.
 * |   Q  |   W  |   E  |   R  |   T  |                      |   Y  |   U  |   I  |   O  |   P  |
 * |------+------+------+------+------|                      |------+------+------+------+------|
 * |   A  |   S  |   D  |   F  |   G  |                      |   H  |   J  |   K  |   L  |   ;  |
 * |------+------+------+------+------|  ,-----.    ,-----.  |------+------+------+------+------|
 * |   Z  |   X  |   C  |   V  |   B  |  |  2  |    |  3  |  |   N  |   M  |   ,  |   .  |   /  |
 * `----------------------------------'  `-----'    `-----'  `----------------------------------'
 *          ,-----.   ,--------------------.            ,--------------------.   ,-----.
 *          |  1  |   | DEL | SPACE | TAB  |            |  ESC  | BS | ENTER |   |  4  |
 *          `-----'   `--------------------'            `--------------------'   `-----'
 */

            bindings = <
&qu_behavior Q 0  &kp W                     &kp E                      &kp R                            &kp T        &kp Y      &kp U                                  &kp I                              &kp O                          &kp P
&kp A             &home_row_mods_lh LALT S  &home_row_mods_lh LCTRL D  &home_row_mods_lh_shift LSHFT F  &kp G        &kp H      &home_row_mods_rh_shift RIGHT_SHIFT J  &home_row_mods_rh RIGHT_CONTROL K  &home_row_mods_rh RIGHT_ALT L  &kp SEMICOLON
&kp Z             &kp X                     &kp C                      &kp V                            &kp B        &kp N      &kp M                                  &kp COMMA                          &kp DOT                        &kp FSLH
&mkp MCLK         &lt 3 TAB                 &lt 2 BACKSPACE            &lt 1 DELETE                     &mkp LCLK    &mkp RCLK  &lt 1 BACKSPACE                        &lt 2 SPACE                        &lt 3 RET                      &kp K_MUTE
            >;

            sensor-bindings =
                <&inc_dec_kp LEFT_ARROW RIGHT_ARROW>,
                <&inc_dec_kp UP_ARROW DOWN_ARROW>,
                <&inc_dec_kp PAGE_DOWN PAGE_UP>,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        navnum_layer {
            /* NAVNUM
 *
 * ,----------------------------------.                      ,----------------------------------.
 * |      | PgUp |  UP  | PgDn |      |                      |   /  |   7  |   8  |   9  |   -  |
 * |------+------+------+------+------|                      |------+------+------+------+------|
 * | Home | Left | Down | Right| End  |                      |   =  |   4  |   5  |   6  |   +  |
 * |------+------+------+------+------|  ,-----.    ,-----.  |------+------+------+------+------|
 * |      |      |  INS |      |      |  |  2  |    |  3  |  |   0  |   1  |   2  |   3  |   *  |
 * `----------------------------------'  `-----'    `-----'  `----------------------------------'
 *          ,-----.   ,--------------------.            ,--------------------.   ,-----.
 *          |  1  |   | DEL | SPACE | MO(3)|            |  ESC  | BS | ENTER |   |  4  |
 *          `-----'   `--------------------'            `--------------------'   `-----'
 */

            bindings = <
&kp LS(SEMICOLON)  &kp PG_UP   &kp UP                       &kp PG_DN  &kp PERIOD              &kp PLUS   &kp N7             &kp N8  &kp N9  &kp ASTERISK
&kp HOME           &kp LEFT    &kp DOWN                     &kp RIGHT  &kp END                 &kp MINUS  &kp N4             &kp N5  &kp N6  &kp FSLH
&trans             &kp DOLLAR  &tap_dance_l_shift_capwords  &kp POUND  &kp RA(LC(NUMBER_4))    &kp N0     &kp N1             &kp N2  &kp N3  &kp EQUAL
&trans             &trans      &trans                       &trans     &trans                  &trans     &kp LS(SEMICOLON)  &trans  &trans  &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_AC_ZOOM_IN C_AC_ZOOM_OUT>,
                <&inc_dec_kp LC(Y) RC(Z)>,
                <&inc_dec_kp C_AL_NEXT_TASK C_AL_PREVIOUS_TASK>,
                <&inc_dec_kp K_NEXT K_PREVIOUS>;
        };

        symbol_layer {
            /* SYM
 *
 * ,----------------------------------.                      ,----------------------------------.
 * |   %  |   @  |   [  |   ]  |   \  |                      |      |      |   ^  |      |      |
 * |------+------+------+------+------|                      |------+------+------+------+------|
 * |   #  |   !  |   (  |   )  |   |  |                      |   _  |   '  |   "  |   ~  |   `  |
 * |------+------+------+------+------|  ,-----.    ,-----.  |------+------+------+------+------|
 * |   $  |      |   {  |   }  |   &  |  |  2  |    |  3  |  |      |      |      |      |      |
 * `----------------------------------'  `-----'    `-----'  `----------------------------------'
 *          ,-----.   ,--------------------.            ,--------------------.   ,-----.
 *          |  1  |   | DEL | SPACE | TAB  |            |  ESC  | BS | ENTER |   |  4  |
 *          `-----'   `--------------------'            `--------------------'   `-----'
 */

            bindings = <
&kp PRCNT  &kp AT     &kp LBKT  &kp RBKT  &kp NON_US_BSLH    &kp UNDERSCORE  &kp AMPERSAND    &kp CARET          &trans            &trans
&kp HASH   &kp EXCL   &kp LPAR  &kp RPAR  &kp PIPE           &kp MINUS       &kp APOS         &kp DOUBLE_QUOTES  &kp TILDE         &kp GRAVE
&kp DLLR   &kp COLON  &kp LBRC  &kp RBRC  &kp AMPS           &trans          &kp EXCLAMATION  &kp AT_SIGN        &kp RS(NUMBER_3)  &trans
&trans     &trans     &trans    &trans    &trans             &trans          &trans           &trans             &trans            &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_FF C_REWIND>,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp C_NEXT C_PREV>,
                <&inc_dec_kp LEFT RIGHT>;
        };

        function_layer {
            /* FUNC
 *
 * ,----------------------------------.                      ,----------------------------------.
 * |      |      | BTCLR|      | Reset|                      | Reset|  F7  |  F8  |  F9  |  F11 |
 * |------+------+------+------+------|                      |------+------+------+------+------|
 * |  BT0 |  BT1 |  BT2 |  BT3 |  BT4 |                      |      |  F4  |  F5  |  F6  |  F12 |
 * |------+------+------+------+------|  ,-----.    ,-----.  |------+------+------+------+------|
 * |      |      |      |      |      |  |  2  |    |  3  |  |  F10 |  F1  |  F2  |  F3  |  F13 |
 * `----------------------------------'  `-----'    `-----'  `----------------------------------'
 *          ,-----.   ,--------------------.            ,--------------------.   ,-----.
 *          |  1  |   | DEL | SPACE | TAB  |            |  ESC  | BS | ENTER |   |  4  |
 *          `-----'   `--------------------'            `--------------------'   `-----'
 */

            bindings = <
&none         &none         &bt BT_CLR    &trans        &sys_reset      &sys_reset  &kp F7  &kp F8  &kp F9  &kp F11
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans      &kp F4  &kp F5  &kp F6  &kp F12
&kt RC(Z)     &kp RC(X)     &kp RC(C)     &kp RC(V)     &kp RC(B)       &kp F10     &kp F1  &kp F2  &kp F3  &kp F13
&trans        &trans        &trans        &trans        &trans          &trans      &trans  &trans  &trans  &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp DOWN UP>,
                <&inc_dec_kp LEFT RIGHT>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
